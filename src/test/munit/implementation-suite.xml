<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="implementation-suite.xml" />
	<munit:test name="getInsuranceFlow-test" doc:id="08de0697-5eb5-4623-a166-02b0d11c0db0" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="5fda1c39-97fa-4c75-8b71-ce37e3f06028" >
				<munit:payload value="#[readUrl('classpath://getInsuranceFlowtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getInsuranceFlowtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getInsuranceFlowtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getInsuranceFlow" doc:id="bc8dbe39-5046-43c6-98e4-43d24865221d" name="getInsuranceFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="34ac3bc2-4406-4a9e-9b6b-f2bfd97f5053" is="#[MunitTools::notNullValue()]" expression="#[payload]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="addInsuranceFlow-test" doc:id="e2698645-442c-4308-97e2-dbdaa2ff9806" >
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="c3dd8050-c840-4d53-8a1a-a320fe4672fc" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="e9acb83b-0e45-4233-92fd-696494038bf3" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Salesforce_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="4fb600af-8b34-4084-9d87-9c3bbbe47b94" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c9a7d5c0-b77f-4427-b53c-1380a42bcf29" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Salesforce_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Input" doc:id="c485cbd0-8e62-45b0-a0db-0814e9b6fca9">
				<munit:payload value="#[output application/json --- readUrl('classpath://addInsuranceFlowtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://addInsuranceFlowtest\set-event_attributes.dwl')]" />
				<munit:variables>
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://addInsuranceFlowtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to addInsuranceFlow" doc:id="ba0ccb5b-bc59-40f2-939e-eb2d09409a52" name="addInsuranceFlow"/>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" doc:id="cbf7ab6e-8baa-4dcd-9251-b007ee13a037" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="addInsuranceFlow-test1" doc:id="2d9b1f9c-4f69-4ecc-982e-4c0183db13d5" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Create" doc:id="f4fa1370-14be-4553-bc0b-22eb6b5486f0" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="e9acb83b-0e45-4233-92fd-696494038bf3" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://addInsuranceFlowtest1\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://addInsuranceFlowtest1\mock_variable_.dwl')]" />
						<munit-tools:variable key="premium_2_years" value="#[output application/json --- readUrl('classpath://addInsuranceFlowtest1\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="premium_3rd_year" value="#[output application/json --- readUrl('classpath://addInsuranceFlowtest1\mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="custID" value="#[output application/json --- readUrl('classpath://addInsuranceFlowtest1\mock_variable_3.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Query" doc:id="8c522b28-948a-44e6-86a0-b532e262a2fc" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c9a7d5c0-b77f-4427-b53c-1380a42bcf29" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://addInsuranceFlowtest1\mock_payload1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://addInsuranceFlowtest1\mock_variable_4.dwl')]" />
						<munit-tools:variable key="premium_2_years" value="#[output application/json --- readUrl('classpath://addInsuranceFlowtest1\mock_variable_5.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="premium_3rd_year" value="#[output application/json --- readUrl('classpath://addInsuranceFlowtest1\mock_variable_6.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="custID" value="#[output application/json --- readUrl('classpath://addInsuranceFlowtest1\mock_variable_7.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Input" doc:id="4e0e9c9e-5f69-4d34-aad0-9cd299ff70f9">
				<munit:payload value="#[output application/json --- readUrl('classpath://addInsuranceFlowtest1\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://addInsuranceFlowtest1\set-event_attributes.dwl')]" />
				<munit:variables>
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://addInsuranceFlowtest1\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to addInsuranceFlow" doc:id="ca075e0e-1e3c-4f75-9749-aa8edb9ec3a2" name="addInsuranceFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="19556234-8534-4523-a951-a48fc4056f7a" is="#[MunitTools::notNullValue()]" expression="#[payload]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="addInsuranceFlow-test2" doc:id="d11d8693-de8f-413a-9b7b-0db163580d43" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Create" doc:id="6b6a7a8a-0807-4ccc-9eb7-98c72d285aa1" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="e9acb83b-0e45-4233-92fd-696494038bf3" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://addInsuranceFlowtest2\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://addInsuranceFlowtest2\mock_variable_.dwl')]" />
						<munit-tools:variable key="premium_2_years" value="#[output application/json --- readUrl('classpath://addInsuranceFlowtest2\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="premium_3rd_year" value="#[output application/json --- readUrl('classpath://addInsuranceFlowtest2\mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="custID" value="#[output application/json --- readUrl('classpath://addInsuranceFlowtest2\mock_variable_3.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Query" doc:id="86424ab9-37f9-4d52-875c-10af72cf61e5" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c9a7d5c0-b77f-4427-b53c-1380a42bcf29" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://addInsuranceFlowtest2\mock_payload1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://addInsuranceFlowtest2\mock_variable_4.dwl')]" />
						<munit-tools:variable key="premium_2_years" value="#[output application/json --- readUrl('classpath://addInsuranceFlowtest2\mock_variable_5.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="premium_3rd_year" value="#[output application/json --- readUrl('classpath://addInsuranceFlowtest2\mock_variable_6.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="custID" value="#[output application/json --- readUrl('classpath://addInsuranceFlowtest2\mock_variable_7.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="babc14d9-e3e6-4d53-9d3f-766db0100fb9" >
				<munit:payload value="#[output application/json --- readUrl('classpath://addInsuranceFlowtest2\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://addInsuranceFlowtest2\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://addInsuranceFlowtest2\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to addInsuranceFlow" doc:id="e7cc15a3-e1d5-412e-a197-d2c5ed8a9491" name="addInsuranceFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="e5d93079-137c-4221-8f16-2aea58793a21" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import addInsuranceFlowtest2::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="claimInsuranceFlow-test" doc:id="90a4d4a0-8c2d-4f68-99e8-faa158357827" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Send message" doc:id="254e0bd1-c9b3-4360-8f05-b5cbfccfa884" processor="sqs:send-message">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="421b073e-2135-4e9f-b74d-9d80514a082a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://claimInsuranceFlowtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://claimInsuranceFlowtest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://claimInsuranceFlowtest\mock_variable_.dwl')]" />
						<munit-tools:variable key="insurance" value="#[output application/java --- readUrl('classpath://claimInsuranceFlowtest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="policyID" value="#[output application/java --- readUrl('classpath://claimInsuranceFlowtest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="customerID" value="#[output application/java --- readUrl('classpath://claimInsuranceFlowtest\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Query" doc:id="42ff71fd-5d61-4675-9e4c-4cf9433aed01" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="eec2ee79-2ab8-488e-80ff-35511dab7465" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://claimInsuranceFlowtest\mock_payload1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://claimInsuranceFlowtest\mock_variable_4.dwl')]" />
						<munit-tools:variable key="insurance" value="#[output application/java --- readUrl('classpath://claimInsuranceFlowtest\mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="policyID" value="#[output application/java --- readUrl('classpath://claimInsuranceFlowtest\mock_variable_6.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="customerID" value="#[output application/java --- readUrl('classpath://claimInsuranceFlowtest\mock_variable_7.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Input" doc:id="90513426-138e-4aa3-b2b2-c056b1377c39">
				<munit:payload value="#[readUrl('classpath://claimInsuranceFlowtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://claimInsuranceFlowtest\set-event_attributes.dwl')]" />
				<munit:variables>
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://claimInsuranceFlowtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to claimInsuranceFlow" doc:id="37c78f80-179f-4abc-a79f-f80b8ca5e4e3" name="claimInsuranceFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="844cd4ea-fa0a-4fc3-98e3-46a1b96fd128" is="#[MunitTools::notNullValue()]" expression="#[payload]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="claimInsuranceFlow-test1" doc:id="708d313b-49a3-4643-8838-9bbcfbbdcf73" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="feac1b2c-229c-45e4-a36f-6e399d74a60f" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="eec2ee79-2ab8-488e-80ff-35511dab7465" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://claimInsuranceFlowtest1\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://claimInsuranceFlowtest1\mock_variable_.dwl')]" />
						<munit-tools:variable key="insurance" value="#[output application/java --- readUrl('classpath://claimInsuranceFlowtest1\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="policyID" value="#[output application/java --- readUrl('classpath://claimInsuranceFlowtest1\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="customerID" value="#[output application/java --- readUrl('classpath://claimInsuranceFlowtest1\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Upsert" doc:id="97858768-47de-48c2-a317-ab63302dc130" processor="salesforce:upsert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b5afd2e3-39e4-40f1-95c1-54572123e89a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://claimInsuranceFlowtest1\mock_payload1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://claimInsuranceFlowtest1\mock_variable_4.dwl')]" />
						<munit-tools:variable key="insurance" value="#[output application/java --- readUrl('classpath://claimInsuranceFlowtest1\mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="policyID" value="#[output application/java --- readUrl('classpath://claimInsuranceFlowtest1\mock_variable_6.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="customerID" value="#[output application/java --- readUrl('classpath://claimInsuranceFlowtest1\mock_variable_7.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Input" doc:id="e9dd4a04-8303-4e26-9e43-7cb8033e4386">
				<munit:payload value="#[readUrl('classpath://claimInsuranceFlowtest1\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://claimInsuranceFlowtest1\set-event_attributes.dwl')]" />
				<munit:variables>
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://claimInsuranceFlowtest1\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to claimInsuranceFlow" doc:id="ffc1bf1e-6b5f-4345-82a0-855b0ed95073" name="claimInsuranceFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="91dfaf3f-7459-49aa-a4fd-5f45ec92bfb4" is="#[MunitTools::notNullValue()]" expression="#[payload]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="implementation-test-suite-healthApprovalFlowTest1" doc:id="f4389f0a-7f0d-4bec-bf18-cd489513b2ff" description="Test" expectedErrorType="ANY">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="41a72b5a-e9ef-4a01-bf8c-6e18d029c13f" processor="salesforce:upsert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="af32dc6d-fc57-4bbe-ae9b-024a029d05a0" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Salesforce_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			
</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="c75116ae-f720-4746-a72c-e6fe11012cb0" >
				<munit:payload value='[
  {
    "Id": "a025j00000AORIHAA5",
    "Type__c": "Health",
    "CustomerID__c": "17046",
    "PolicyID__c": "POL-00030"
  }
]' encoding="UTF-8" mediaType="text/plain" />

			</munit:set-event>
			<flow-ref doc:name="Flow-ref to healthApprovalFlow" doc:id="8d844b72-b2ca-4d7f-a04c-4055ef8e3fcf" name="healthApprovalFlow"/>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" doc:id="4bf4f4ed-fc32-4b80-9042-0cf2191db50d" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>

		</munit:validation>
	
</munit:test>
	


</mule>
